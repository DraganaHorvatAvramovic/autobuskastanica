[{"C:\\Modul3WebMVC\\autobuskastanica-front\\autobuskastanica-front\\src\\index.js":"1","C:\\Modul3WebMVC\\autobuskastanica-front\\autobuskastanica-front\\src\\components\\NotFound.js":"2","C:\\Modul3WebMVC\\autobuskastanica-front\\autobuskastanica-front\\src\\components\\Home.js":"3","C:\\Modul3WebMVC\\autobuskastanica-front\\autobuskastanica-front\\src\\components\\login\\Login.js":"4","C:\\Modul3WebMVC\\autobuskastanica-front\\autobuskastanica-front\\src\\services\\auth.js":"5","C:\\Modul3WebMVC\\autobuskastanica-front\\autobuskastanica-front\\src\\apis\\AutobuskaStanicaAxios.js":"6","C:\\Modul3WebMVC\\autobuskastanica-front\\autobuskastanica-front\\src\\components\\linije\\Linije.js":"7","C:\\Modul3WebMVC\\autobuskastanica-front\\autobuskastanica-front\\src\\components\\linije\\AddLinije.js":"8","C:\\Modul3WebMVC\\autobuskastanica-front\\autobuskastanica-front\\src\\components\\linije\\EditLinije.js":"9","C:\\Modul3WebMVC\\autobuskastanica-front\\autobuskastanica-front\\src\\components\\linije\\Rezervacija.js":"10"},{"size":2105,"mtime":1612467069943,"results":"11","hashOfConfig":"12"},{"size":110,"mtime":1611767430294,"results":"13","hashOfConfig":"12"},{"size":137,"mtime":1611767323666,"results":"14","hashOfConfig":"12"},{"size":1214,"mtime":1611767367343,"results":"15","hashOfConfig":"12"},{"size":558,"mtime":1611767227253,"results":"16","hashOfConfig":"12"},{"size":453,"mtime":1611767102936,"results":"17","hashOfConfig":"12"},{"size":6375,"mtime":1611863879690,"results":"18","hashOfConfig":"12"},{"size":3764,"mtime":1611861236238,"results":"19","hashOfConfig":"12"},{"size":4014,"mtime":1611774455147,"results":"20","hashOfConfig":"12"},{"size":2316,"mtime":1611858750544,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"18i1p3a",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},"C:\\Modul3WebMVC\\autobuskastanica-front\\autobuskastanica-front\\src\\index.js",[],["47","48"],"C:\\Modul3WebMVC\\autobuskastanica-front\\autobuskastanica-front\\src\\components\\NotFound.js",[],"C:\\Modul3WebMVC\\autobuskastanica-front\\autobuskastanica-front\\src\\components\\Home.js",[],"C:\\Modul3WebMVC\\autobuskastanica-front\\autobuskastanica-front\\src\\components\\login\\Login.js",[],"C:\\Modul3WebMVC\\autobuskastanica-front\\autobuskastanica-front\\src\\services\\auth.js",[],"C:\\Modul3WebMVC\\autobuskastanica-front\\autobuskastanica-front\\src\\apis\\AutobuskaStanicaAxios.js",[],["49","50"],"C:\\Modul3WebMVC\\autobuskastanica-front\\autobuskastanica-front\\src\\components\\linije\\Linije.js",["51","52","53","54","55","56","57"],"import React from 'react';\r\nimport AutobuskaStanicaAxios from './../../apis/AutobuskaStanicaAxios';\r\nimport {Button, Form, Table} from \"react-bootstrap\";\r\n\r\nclass AutobuskaStanica extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = { \r\n            linije: [],\r\n            prevoznici: [],\r\n            search: {destinacija: \"\", prevoznikId: -1, cena_karte: 0.00},\r\n            pageNo: 0,\r\n            totalPages: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getLinije();\r\n        this.getPrevoznici();\r\n        \r\n    }\r\n\r\n    async getPrevoznici(){\r\n        try{\r\n            let result = await AutobuskaStanicaAxios.get(\"/prevoznici\");\r\n            let prevoznici = result.data;\r\n            this.setState({prevoznici: prevoznici});\r\n            console.log(\"test1\");\r\n        }catch(error){\r\n            console.log(error);\r\n            alert(\"Greska pri pribavljanju prevoznika\");\r\n        }\r\n    }\r\n\r\n    getLinije(){\r\n        let config = {\r\n            params: {\r\n                pageNo: this.state.pageNo\r\n            },\r\n        }\r\n        if(this.state.search.destinacija != \"\"){\r\n            config.params.destinacija = this.state.search.destinacija;\r\n        }\r\n        if(this.state.search.prevoznikId != -1){\r\n            config.params.prevoznikId = this.state.search.prevoznikId;\r\n        }\r\n        if(this.state.search.cena_karte != 0.00){\r\n            config.params.cena_karte = this.state.search.cena_karte;\r\n        }\r\n        AutobuskaStanicaAxios.get('/linije', config)\r\n        .then(res => {\r\n            // handle success\r\n            console.log(res);\r\n            this.setState({\r\n                linije: res.data, \r\n                totalPages: res.headers[\"total-pages\"]\r\n             });\r\n       })\r\n       .catch(error => {\r\n           // handle error\r\n           console.log(error);\r\n           alert('Error occured please try again!');\r\n       });\r\n    }\r\n\r\n    goToAdd(){\r\n        this.props.history.push('/linije/add'); \r\n    }\r\n    goToEdit(linijaId){\r\n        this.props.history.push('/linije/edit/'+ linijaId); \r\n    }\r\n\r\n    goToRezervacija(linijaId){\r\n        this.props.history.push('/linije/rezervacija/'+ linijaId); \r\n    }\r\n   \r\n    \r\n    \r\n    \r\n    renderLinije(){\r\n       return this.state.linije.map((linija) => {\r\n            return(\r\n                <tr key={linija.id}>\r\n                    <td>{linija.brroj_mesta}</td>\r\n                    <td>{linija.cena_karte}</td>\r\n                    <td>{linija.vreme_polska}</td>\r\n                    <td>{linija.destinacija}</td>\r\n                    <td>{linija.prevoznikDTO.naziv}</td>\r\n                    <td><Button variant=\"danger\" onClick={() => this.goToRezervacija(linija.id)}>Rezervisi</Button></td>\r\n                    <td><Button variant=\"warning\" onClick={() => this.goToEdit(linija.id)}>Edit</Button></td>\r\n                  <td><Button variant=\"danger\" onClick={() => this.delete(linija.id)}>Delete</Button></td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n    doSearch(){\r\n        this.getLinije();\r\n    }\r\n\r\n    searchValueInputChange(event) {\r\n        let control = event.target;\r\n    \r\n        let name = control.name;\r\n        let value = control.value;\r\n    \r\n        let search = this.state.search;\r\n        search[name] = value;\r\n    \r\n        this.setState({ search: search });\r\n      }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h1>Linije</h1>\r\n                <div>\r\n                    <Button onClick={() => this.goToAdd() }>Dodaj</Button>\r\n                    <br/>\r\n                    <Form style={{marginTop:35}}>\r\n                        <Form.Group>\r\n                            <Form.Label>Destinacija</Form.Label>\r\n                                <Form.Control name=\"destinacija\" as=\"input\" value={this.state.search.destinacija} onChange={(e) => this.searchValueInputChange(e)}>\r\n                                </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>Prevoznik</Form.Label>\r\n                                <Form.Control name=\"prevoznikId\" as=\"select\" value={this.state.search.prevoznikId}  onChange={(e) => this.searchValueInputChange(e)}>\r\n                                    <option value={-1}></option>\r\n                                        {this.state.prevoznici.map((prevoznik) => {\r\n                                     return (\r\n                                    <option value={prevoznik.id} key={prevoznik.id}>\r\n                                        {prevoznik.naziv}\r\n                                     </option>\r\n                                 );\r\n                                 })}\r\n                                </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>Maksimalna cena</Form.Label>\r\n                                <Form.Control name=\"cena_karte\" as=\"input\" value={this.state.search.cena_karte} onChange={(e) => this.searchValueInputChange(e)}>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Button onClick={() => this.doSearch()}>Pretraga</Button>\r\n                    </Form>\r\n                    <Table style={{marginTop:5}}>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Broj mesta</th>\r\n                                <th>Cena karte</th>\r\n                                <th>Vreme polaska</th>\r\n                                <th>Destinacija</th>\r\n                                <th>Prevoznik</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.renderLinije()}\r\n                        </tbody>\r\n                    </Table>\r\n                    <div><Button disabled={this.state.pageNo==0} onClick={() => this.getLinije(this.state.pageNo= this.state.pageNo-1)} >Previous</Button>\r\n                    <Button disabled={this.state.pageNo==this.state.totalPages-1} onClick={() =>  this.getLinije(this.state.pageNo= this.state.pageNo+1)}>Next</Button></div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default AutobuskaStanica;","C:\\Modul3WebMVC\\autobuskastanica-front\\autobuskastanica-front\\src\\components\\linije\\AddLinije.js",["58","59"],"import React from 'react';\r\nimport AutobuskaStanicaAxios from './../../apis/AutobuskaStanicaAxios';\r\n\r\nclass AddLinije extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        let linija = {\r\n            broj_mesta: 0,\r\n            cena_karte: 0.00,\r\n            vreme_polaska: \"\",\r\n            destinacija: \"\",\r\n            prevoznik: null\r\n        }\r\n\r\n        this.state = {linija: linija, prevoznici: []}\r\n    }\r\n    componentDidMount(){\r\n        this.getPrevoznici();\r\n    }\r\n\r\n    async getPrevoznici(){\r\n        try{\r\n            let result = await AutobuskaStanicaAxios.get(\"/prevoznici\");\r\n            let prevoznici = result.data;\r\n            this.setState({prevoznici: prevoznici});\r\n            console.log(\"test1\");\r\n        }catch(error){\r\n            console.log(error);\r\n            alert(\"Greska pri pribavljanju prevoznika\");\r\n        }\r\n    }\r\n\r\n    async create(e){\r\n        e.preventDefault();\r\n\r\n        try{\r\n            let linija = this.state.linija;\r\n            let linijaDTO = {\r\n                brroj_mesta: linija.broj_mesta,\r\n                cena_karte: linija.cena_karte,\r\n                vreme_polska: linija.vreme_polaska,\r\n                destinacija: linija.destinacija,\r\n                prevoznikDTO: linija.prevoznik\r\n            }\r\n\r\n            let response = await AutobuskaStanicaAxios.post(\"/linije\", linijaDTO);\r\n         this.props.history.push(\"/linije\");\r\n    }catch(error){\r\n        alert(\"Grska prilkom snimanja linije\");\r\n    }\r\n    }\r\n\r\n    valueInputChanged(e) {\r\n        let input = e.target;\r\n    \r\n        let name = input.name;\r\n        let value = input.value;\r\n    \r\n        let linija = this.state.linija;\r\n        linija[name] = value;\r\n    \r\n        this.setState({ linija: linija });\r\n    }\r\n    \r\n    prevoznikSelectionChanged(e){\r\n\r\n        let prevoznikId = e.target.value;\r\n        let prevoznik = this.state.prevoznici.find((prevoznik) => prevoznik.id == prevoznikId);\r\n\r\n        let linija = this.state.linija;\r\n        linija.prevoznik = prevoznik;\r\n\r\n        this.setState({linija: linija});\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1>Dodavanje linije</h1>\r\n                <form>\r\n                    <label htmlFor=\"pBrojMesta\">Broj mesta</label>\r\n                    <input id=\"pBrojMesta\" name=\"broj_mesta\" onChange={(e)=>this.valueInputChanged(e)}/> <br/>\r\n                    <label htmlFor=\"pCenaKarte\">Cena karte</label>\r\n                    <input id=\"pCenaKarte\" name=\"cena_karte\" onChange={(e)=>this.valueInputChanged(e)}/> <br/>\r\n                    <label htmlFor=\"PVremePolsaka\">Vreme polaska</label>\r\n                    <input id=\"PVremePolsaka\" name=\"vreme_polaska\" onChange={(e)=>this.valueInputChanged(e)}/> <br/>\r\n                    <label htmlFor=\"pDestinacija\">Destinacija</label>\r\n                    <input id=\"pDestinacija\" name=\"destinacija\" onChange={(e)=>this.valueInputChanged(e)}/> <br/>\r\n                    <label htmlFor=\"pPrevoznik\">Prevoznici</label>\r\n                    \r\n                    <select id=\"pPrevoznik\" onChange={event => this.prevoznikSelectionChanged(event)}>\r\n                        <option></option>\r\n                        {\r\n                            this.state.prevoznici.map((prevoznik) => {\r\n                                return (\r\n                                    <option key={prevoznik.id} value={prevoznik.id}>{prevoznik.naziv}</option>\r\n                                )\r\n                            })\r\n                        }\r\n                    </select><br/>\r\n                    <button onClick={(event)=>{this.create(event);}}>Add</button>\r\n\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default AddLinije;","C:\\Modul3WebMVC\\autobuskastanica-front\\autobuskastanica-front\\src\\components\\linije\\EditLinije.js",[],"C:\\Modul3WebMVC\\autobuskastanica-front\\autobuskastanica-front\\src\\components\\linije\\Rezervacija.js",["60"],"import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport AutobuskaStanicaAxios from './../../apis/AutobuskaStanicaAxios';\r\n\r\nclass Rezervacija extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = { linijaId: -1, linijaBrojMesta: 0}\r\n           \r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getLinijeById(this.props.match.params.id);\r\n    }\r\n\r\n\r\n    getLinijeById(linijaId){\r\n        AutobuskaStanicaAxios.get('/linije/' + linijaId)\r\n        .then(res => {\r\n            // handle success\r\n            console.log(res);\r\n            this.setState({linijaId: res.data.id});\r\n        })\r\n        .catch(error => {\r\n            // handle error\r\n            console.log(error);\r\n            alert('Greska prilkom ucitavanja!');\r\n         });  \r\n    }\r\n\r\n    valueBrojMestaChanged = event => {\r\n        console.log(event.target.value);\r\n        let input = event.target;\r\n        let value = input.value;\r\n\r\n        this.setState({\r\n            linijaBrojMesta: value\r\n        }, function(){\r\n            console.log('Broj mesta je ' + this.state.linijaBrojMesta)\r\n            console.log('Id linije je ' + this.state.linijaId)\r\n        })\r\n    }\r\n\r\n    rezervacija(event) {\r\n        event.preventDefault();\r\n\r\n        AutobuskaStanicaAxios.post('/rezervacije?id=' + this.state.linijaId + '&brojMesta=' + this.state.linijaBrojMesta, {})\r\n        .then(res => {\r\n            // handle success\r\n            console.log(res);\r\n            alert('Uspesna rezervacija');\r\n            this.props.history.push('/linije');\r\n        })\r\n        .catch(error => {\r\n            // handle error\r\n            console.log(error);\r\n            alert('Greska prilkom rezervacije!');\r\n         });\r\n    }\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h1>Rezervacija</h1>\r\n                <form>\r\n                    <label htmlFor=\"brojMesta\">Broj mesta</label> <br/>\r\n                    <input id=\"brojMesta\" type=\"number\" value={this.state.linijaBrojMesta} onChange={(event)=>this.valueBrojMestaChanged(event)}/> <br/>\r\n                    <button className=\"button button-navy\" onClick={(event) => this.rezervacija(event)}>Rezervisi</button>\r\n                </form>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Rezervacija;",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"61","replacedBy":"65"},{"ruleId":"63","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":43,"column":42,"nodeType":"69","messageId":"70","endLine":43,"endColumn":44},{"ruleId":"67","severity":1,"message":"68","line":46,"column":42,"nodeType":"69","messageId":"70","endLine":46,"endColumn":44},{"ruleId":"67","severity":1,"message":"68","line":49,"column":41,"nodeType":"69","messageId":"70","endLine":49,"endColumn":43},{"ruleId":"67","severity":1,"message":"71","line":162,"column":61,"nodeType":"69","messageId":"70","endLine":162,"endColumn":63},{"ruleId":"72","severity":1,"message":"73","line":162,"column":96,"nodeType":"74","endLine":162,"endColumn":106},{"ruleId":"67","severity":1,"message":"71","line":163,"column":56,"nodeType":"69","messageId":"70","endLine":163,"endColumn":58},{"ruleId":"72","severity":1,"message":"73","line":163,"column":114,"nodeType":"74","endLine":163,"endColumn":124},{"ruleId":"75","severity":1,"message":"76","line":48,"column":17,"nodeType":"77","messageId":"78","endLine":48,"endColumn":25},{"ruleId":"67","severity":1,"message":"71","line":70,"column":80,"nodeType":"69","messageId":"70","endLine":70,"endColumn":82},{"ruleId":"75","severity":1,"message":"79","line":2,"column":10,"nodeType":"77","messageId":"78","endLine":2,"endColumn":16},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],["80"],["81"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]